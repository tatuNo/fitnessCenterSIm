package osat;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import controller.KontrolleriIf;
import eduni.distributions.Normal;
import osat.Trace.Level;

class PalvelupisteTest {
	
	private Palvelupiste pp;
	private static Moottori m;
	private static KontrolleriIf kontrolleri;
	private static Kello kello;
	
	@BeforeAll
	static void setUpBeforeClass() {
	Trace.setTraceLevel(Level.ERR);
	kello = Kello.getInstance();
	}
	
	@BeforeEach
	void nollaa () {
		m = new Moottori(kontrolleri);
		kello.setAika(0);
		pp = new Palvelupiste(new Normal(1,1), m, TapahtumanTyyppi.DEP8);
	}

	@Test
	void testJonoJarjestys() {
		Asiakas a = new Asiakas(AsiakkaanTyyppi.arvoTyyppi(),AsiakkaanTyyppi.arvoSukupuoli());
		Asiakas b = new Asiakas(AsiakkaanTyyppi.arvoTyyppi(),AsiakkaanTyyppi.arvoSukupuoli());
		Asiakas c = new Asiakas(AsiakkaanTyyppi.arvoTyyppi(),AsiakkaanTyyppi.arvoSukupuoli());
		
		pp.lisaaJonoon(a);
		pp.lisaaJonoon(b);
		pp.lisaaJonoon(c);
		assertEquals(a, pp.otaJonosta(), "Jonosta pitäisi tulla aina ensimmäisenä siihen saapunut asiakas");
	}

	@Test
	void testAloitaPalvelu() {
		// JAA-A  . : : .. :.
		fail("Not yet implemented");
	}

	@Test
	void testOnJonossa() {
		Asiakas a = new Asiakas(AsiakkaanTyyppi.arvoTyyppi(),AsiakkaanTyyppi.arvoSukupuoli());
		pp.lisaaJonoon(a);
		assertEquals(true, pp.onJonossa(), "Jonossa pitäisi olla asiakas");
	}

	@Test
	void testOnVarattu () {
		pp.aloitaPalvelu();
		assertEquals(true, pp.onVarattu(), "Palvelupisteen pitäisi olla varattu");
	}
}
